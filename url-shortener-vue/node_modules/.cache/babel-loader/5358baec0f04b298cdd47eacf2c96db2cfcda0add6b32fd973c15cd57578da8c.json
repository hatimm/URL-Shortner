{"ast":null,"code":"export default {\n  data() {\n    return {\n      longUrl: '',\n      shortenedUrl: null,\n      redirectMode: false\n    };\n  },\n  methods: {\n    async shortenUrl() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/shorten', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            longUrl: this.longUrl\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Error shortening URL');\n        }\n        const data = await response.json();\n        this.shortenedUrl = data.short_url;\n      } catch (error) {\n        console.error(error);\n        // Handle errors, show a message to the user, etc.\n      }\n    },\n    async redirect() {\n      try {\n        this.redirectMode = true;\n        const shortUrl = this.$route.params.shortUrl;\n        const response = await fetch(`http://127.0.0.1:8000/api/${shortUrl}`);\n        if (!response.ok) {\n          throw new Error('Error redirecting');\n        }\n\n        // Use response.url to get the redirected URL\n        window.location.href = response.url;\n      } catch (error) {\n        console.error(error);\n        // Handle errors, show a message to the user, etc.\n      }\n    }\n  },\n  mounted() {\n    // Check if the component is in redirect mode\n    if (this.$route.params.shortUrl) {\n      this.redirect();\n    }\n  }\n};","map":{"version":3,"names":["data","longUrl","shortenedUrl","redirectMode","methods","shortenUrl","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","short_url","error","console","redirect","shortUrl","$route","params","window","location","href","url","mounted"],"sources":["src/components/UrlShortener.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>URL Shortener</h1>\r\n    <form v-if=\"!redirectMode\" @submit.prevent=\"shortenUrl\">\r\n      <label for=\"longUrl\">Long URL:</label>\r\n      <input v-model=\"longUrl\" type=\"text\" id=\"longUrl\" required>\r\n      <button type=\"submit\">Shorten URL</button>\r\n    </form>\r\n    <div v-else>\r\n      <h1>Redirecting...</h1>\r\n    </div>\r\n    <p v-if=\"shortenedUrl\">Shortened URL: <a :href=\"shortenedUrl\" target=\"_blank\">{{ shortenedUrl }}</a></p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      longUrl: '',\r\n      shortenedUrl: null,\r\n      redirectMode: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async shortenUrl() {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/shorten', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ longUrl: this.longUrl }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error shortening URL');\r\n        }\r\n\r\n        const data = await response.json();\r\n        this.shortenedUrl = data.short_url;\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Handle errors, show a message to the user, etc.\r\n      }\r\n    },\r\n\r\n    async redirect() {\r\n    try {\r\n      this.redirectMode = true;\r\n      const shortUrl = this.$route.params.shortUrl;\r\n      const response = await fetch(`http://127.0.0.1:8000/api/${shortUrl}`);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error redirecting');\r\n      }\r\n\r\n      // Use response.url to get the redirected URL\r\n      window.location.href = response.url;\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle errors, show a message to the user, etc.\r\n    }\r\n\r\n    },\r\n  },\r\n  mounted() {\r\n    // Check if the component is in redirect mode\r\n    if (this.$route.params.shortUrl) {\r\n      this.redirect();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":"AAgBA;EACAA,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YAAAX,OAAA,OAAAA;UAAA;QACA;QAEA,KAAAK,QAAA,CAAAO,EAAA;UACA,UAAAC,KAAA;QACA;QAEA,MAAAd,IAAA,SAAAM,QAAA,CAAAS,IAAA;QACA,KAAAb,YAAA,GAAAF,IAAA,CAAAgB,SAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA;MACA;IACA;IAEA,MAAAE,SAAA;MACA;QACA,KAAAhB,YAAA;QACA,MAAAiB,QAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,QAAA;QACA,MAAAd,QAAA,SAAAC,KAAA,8BAAAa,QAAA;QAEA,KAAAd,QAAA,CAAAO,EAAA;UACA,UAAAC,KAAA;QACA;;QAEA;QACAS,MAAA,CAAAC,QAAA,CAAAC,IAAA,GAAAnB,QAAA,CAAAoB,GAAA;MACA,SAAAT,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA;MACA;IAEA;EACA;EACAU,QAAA;IACA;IACA,SAAAN,MAAA,CAAAC,MAAA,CAAAF,QAAA;MACA,KAAAD,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}