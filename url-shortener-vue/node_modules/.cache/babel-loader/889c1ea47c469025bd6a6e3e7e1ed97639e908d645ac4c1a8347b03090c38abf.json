{"ast":null,"code":"export default {\n  data() {\n    return {\n      longUrl: '',\n      shortenedUrl: null,\n      redirectMode: false,\n      loading: false,\n      shortenedUrls: [],\n      // Data from the server\n      displayedShortenedUrls: [],\n      // Subset of shortenedUrls to display\n      itemsPerPage: 5,\n      currentPage: 1\n    };\n  },\n  methods: {\n    async shortenUrl() {\n      try {\n        this.loading = true;\n        let inputUrl = this.longUrl.trim();\n        if (!inputUrl.startsWith('http://') && !inputUrl.startsWith('https://')) {\n          inputUrl = `http://${inputUrl}`;\n        }\n        const response = await fetch('http://127.0.0.1:8000/api/shorten', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            longUrl: inputUrl\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Error shortening URL');\n        }\n        const data = await response.json();\n        this.shortenedUrl = data.short_url;\n        this.loading = false;\n        this.longUrl = '';\n        this.fetchShortenedUrls(); // Fetch updated list after shortening\n      } catch (error) {\n        console.error(error);\n        this.loading = false;\n      }\n    },\n    async redirect() {\n      const constructedUrl = `http://127.0.0.1:8000/api/${this.shortenedUrl}`;\n      window.open(constructedUrl, '_blank');\n      // Optionally, you can add logic here to refresh the page on redirection\n    },\n    async fetchShortenedUrls() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/shortened-urls');\n        if (!response.ok) {\n          throw new Error('Error fetching shortened URLs');\n        }\n        const data = await response.json();\n        this.shortenedUrls = data.shortenedUrls;\n        this.showMore(); // Refresh displayed URLs after fetching\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    showMore() {\n      // Calculate the next set of rows based on pagination\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      this.displayedShortenedUrls = this.shortenedUrls.slice(start, end);\n      this.currentPage++;\n    }\n  },\n  mounted() {\n    if (this.$route.params.shortUrl) {\n      this.redirectMode = true;\n      this.redirect();\n    }\n    this.fetchShortenedUrls(); // Fetch initial list when the component is mounted\n  }\n};","map":{"version":3,"names":["data","longUrl","shortenedUrl","redirectMode","loading","shortenedUrls","displayedShortenedUrls","itemsPerPage","currentPage","methods","shortenUrl","inputUrl","trim","startsWith","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","short_url","fetchShortenedUrls","error","console","redirect","constructedUrl","window","open","showMore","start","end","slice","mounted","$route","params","shortUrl"],"sources":["src/components/UrlShortener.vue"],"sourcesContent":["<template>\r\n  <div class=\"url-shortener\">\r\n    <h1 class=\"title\">URL Shortener</h1>\r\n    <form v-if=\"!redirectMode\" @submit.prevent=\"shortenUrl\" class=\"url-box\">\r\n      <label for=\"longUrl\" class=\"label\">Long URL:</label>\r\n      <input v-model=\"longUrl\" type=\"text\" id=\"longUrl\" class=\"input\" required>\r\n      <button type=\"submit\" class=\"button\" :disabled=\"loading\">\r\n        <span v-if=\"loading\">Loading...</span>\r\n        <span v-else>Shorten URL</span>\r\n      </button>\r\n    </form>\r\n    <div v-else>\r\n      <h1>Redirecting...</h1>\r\n    </div>\r\n    <p v-if=\"shortenedUrl\" class=\"shortened-url\">\r\n      Shortened URL: <a :href=\"shortenedUrl\" @click.prevent=\"redirect\" target=\"_blank\">{{ shortenedUrl }}</a>\r\n    </p>\r\n\r\n    <!-- Display List of Previously Shortened URLs -->\r\n    <div class=\"shortened-url-list\">\r\n      <h2>Previously Shortened URLs</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Short URL</th>\r\n            <th>Long URL</th>\r\n            <th>Click Count</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(url) in displayedShortenedUrls\" :key=\"url.id\">\r\n            <td><a :href=\"`http://127.0.0.1:8000/api/${url.short_url}`\" target=\"_blank\">{{ url.short_url }}</a></td>\r\n            <td>{{ url.long_url }}</td>\r\n            <td>{{ url.click_count }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button v-if=\"displayedShortenedUrls.length < shortenedUrls.length\" @click=\"showMore\">Show More</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      longUrl: '',\r\n      shortenedUrl: null,\r\n      redirectMode: false,\r\n      loading: false,\r\n      shortenedUrls: [], // Data from the server\r\n      displayedShortenedUrls: [], // Subset of shortenedUrls to display\r\n      itemsPerPage: 5,\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  methods: {\r\n    async shortenUrl() {\r\n      try {\r\n        this.loading = true;\r\n        let inputUrl = this.longUrl.trim();\r\n\r\n        if (!inputUrl.startsWith('http://') && !inputUrl.startsWith('https://')) {\r\n          inputUrl = `http://${inputUrl}`;\r\n        }\r\n\r\n        const response = await fetch('http://127.0.0.1:8000/api/shorten', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ longUrl: inputUrl }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error shortening URL');\r\n        }\r\n\r\n        const data = await response.json();\r\n        this.shortenedUrl = data.short_url;\r\n        this.loading = false;\r\n        this.longUrl = '';\r\n        this.fetchShortenedUrls(); // Fetch updated list after shortening\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async redirect() {\r\n      const constructedUrl = `http://127.0.0.1:8000/api/${this.shortenedUrl}`;\r\n      window.open(constructedUrl, '_blank');\r\n      // Optionally, you can add logic here to refresh the page on redirection\r\n    },\r\n\r\n    async fetchShortenedUrls() {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/shortened-urls');\r\n        if (!response.ok) {\r\n          throw new Error('Error fetching shortened URLs');\r\n        }\r\n        const data = await response.json();\r\n        this.shortenedUrls = data.shortenedUrls;\r\n        this.showMore(); // Refresh displayed URLs after fetching\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    showMore() {\r\n      // Calculate the next set of rows based on pagination\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      this.displayedShortenedUrls = this.shortenedUrls.slice(start, end);\r\n      this.currentPage++;\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.$route.params.shortUrl) {\r\n      this.redirectMode = true;\r\n      this.redirect();\r\n    }\r\n    this.fetchShortenedUrls(); // Fetch initial list when the component is mounted\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.url-shortener {\r\n  max-width: 400px;\r\n  margin: 100px auto 0;\r\n  padding: 130px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  font-size: 40px;\r\n  margin-bottom: 20px;\r\n  color: #2c3e50;\r\n}\r\n\r\n.url-box {\r\n  background-color: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.label {\r\n  font-size: 18px;\r\n  color: #34495e;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.input {\r\n  width: calc(100% - 16px);\r\n  padding: 8px;\r\n  margin-bottom: 18px;\r\n  border: 1px solid #bdc3c7;\r\n  border-radius: 4px;\r\n}\r\n\r\n.button {\r\n  background-color: #27ae60;\r\n  color: #ffffff;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.button:hover {\r\n  background-color: #219d54;\r\n}\r\n\r\n.button:disabled {\r\n  cursor: not-allowed;\r\n  background-color: #bdc3c7;\r\n}\r\n\r\n.shortened-url-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.shortened-url-list h2 {\r\n  font-size: 24px;\r\n  color: #2c3e50;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.shortened-url-list table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.shortened-url-list th,\r\n.shortened-url-list td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.shortened-url-list th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.shortened-url-list button {\r\n  margin-top: 10px;\r\n  padding: 8px 12px;\r\n  background-color: #27ae60;\r\n  color: #ffffff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.shortened-url-list button:hover {\r\n  background-color: #219d54;\r\n}\r\n\r\n.shortened-url-list button:disabled {\r\n  cursor: not-allowed;\r\n  background-color: #bdc3c7;\r\n}\r\n</style>\r\n"],"mappings":"AA2CA;EACAA,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,YAAA;MACAC,OAAA;MACAC,aAAA;MAAA;MACAC,sBAAA;MAAA;MACAC,YAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,KAAAN,OAAA;QACA,IAAAO,QAAA,QAAAV,OAAA,CAAAW,IAAA;QAEA,KAAAD,QAAA,CAAAE,UAAA,gBAAAF,QAAA,CAAAE,UAAA;UACAF,QAAA,aAAAA,QAAA;QACA;QAEA,MAAAG,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YAAAnB,OAAA,EAAAU;UAAA;QACA;QAEA,KAAAG,QAAA,CAAAO,EAAA;UACA,UAAAC,KAAA;QACA;QAEA,MAAAtB,IAAA,SAAAc,QAAA,CAAAS,IAAA;QACA,KAAArB,YAAA,GAAAF,IAAA,CAAAwB,SAAA;QACA,KAAApB,OAAA;QACA,KAAAH,OAAA;QACA,KAAAwB,kBAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAtB,OAAA;MACA;IACA;IAEA,MAAAwB,SAAA;MACA,MAAAC,cAAA,qCAAA3B,YAAA;MACA4B,MAAA,CAAAC,IAAA,CAAAF,cAAA;MACA;IACA;IAEA,MAAAJ,mBAAA;MACA;QACA,MAAAX,QAAA,SAAAC,KAAA;QACA,KAAAD,QAAA,CAAAO,EAAA;UACA,UAAAC,KAAA;QACA;QACA,MAAAtB,IAAA,SAAAc,QAAA,CAAAS,IAAA;QACA,KAAAlB,aAAA,GAAAL,IAAA,CAAAK,aAAA;QACA,KAAA2B,QAAA;MACA,SAAAN,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IAEAM,SAAA;MACA;MACA,MAAAC,KAAA,SAAAzB,WAAA,aAAAD,YAAA;MACA,MAAA2B,GAAA,GAAAD,KAAA,QAAA1B,YAAA;MACA,KAAAD,sBAAA,QAAAD,aAAA,CAAA8B,KAAA,CAAAF,KAAA,EAAAC,GAAA;MACA,KAAA1B,WAAA;IACA;EACA;EACA4B,QAAA;IACA,SAAAC,MAAA,CAAAC,MAAA,CAAAC,QAAA;MACA,KAAApC,YAAA;MACA,KAAAyB,QAAA;IACA;IACA,KAAAH,kBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}